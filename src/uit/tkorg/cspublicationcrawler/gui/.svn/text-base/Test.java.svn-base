/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Test.java
 *
 * Created on 14-09-2011, 02:53:49
 */
package uit.tkorg.cspublicationcrawler.gui;

import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import uit.tkorg.cspublicationcrawler.controller.MASController;

/**
 *
 * @author v-huongt
 */
public class Test extends javax.swing.JFrame {

    /** Creates new form Test */
    public Test() {
        initComponents();
//        this.redirectSystemStreams();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        testTextArea = new javax.swing.JTextArea();
        testButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("Form"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        this.redirectSystemStreams();
        //TextAreaOutputStream taos = new TextAreaOutputStream( testTextArea, 60 );
        //        PrintStream ps = new PrintStream( taos );
        //        System.setOut( ps );
        //        System.setErr( ps );
        testTextArea.setColumns(20);
        testTextArea.setRows(5);
        testTextArea.setName("testTextArea"); // NOI18N
        jScrollPane1.setViewportView(testTextArea);

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(uit.tkorg.cspublicationcrawler.gui.CSPublicationCrawlerApp.class).getContext().getResourceMap(Test.class);
        testButton.setText(resourceMap.getString("testButton.text")); // NOI18N
        testButton.setName("testButton"); // NOI18N
        testButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(testButton)
                        .addGap(392, 392, 392))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(testButton)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(97, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void testButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testButtonActionPerformed
    
    //System.out.println( "1\n 2\n 3" ); 
    //MASController.doCrawler("Security & Privacy");
    for( int i = 0 ; i < 100 ; i++ ) { 
                    System.out.println( i ); 
                    try {
                        Thread.sleep(100);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Test.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } 

}//GEN-LAST:event_testButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]){
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        new Test().setVisible(true); 
        //MASController.doCrawler("Security & Privacy");

        for( int i = 0 ; i < 200 ; i++ ) { 
                    System.out.println( i ); 
                    try {
                        Thread.sleep(100);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Test.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } 

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                    
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton testButton;
    private javax.swing.JTextArea testTextArea;
    // End of variables declaration//GEN-END:variables

//    //Code for JTextPane output console
//    private void updateTextPane(final String text) {
//        SwingUtilities.invokeLater(new Runnable() {
//
//            public void run() {
//                Document doc = testTextPane.getDocument();
//                try {
//                    doc.insertString(doc.getLength(), text, null);
//                } catch (BadLocationException e) {
//                    throw new RuntimeException(e);
//                }
//                testTextPane.setCaretPosition(doc.getLength() - 1);
//            }
//        });
//    }
//
//    private void redirectSystemStreams() {
//        OutputStream out = new OutputStream() {
//
//            @Override
//            public void write(final int b) throws IOException {
//                updateTextPane(String.valueOf((char) b));
//            }
//
//            @Override
//            public void write(byte[] b, int off, int len) throws IOException {
//                updateTextPane(new String(b, off, len));
//            }
//
//            @Override
//            public void write(byte[] b) throws IOException {
//                write(b, 0, b.length);
//            }
//        };
//        System.setOut(new PrintStream(out, true));
//        System.setErr(new PrintStream(out, true));
//    }

      //Code for text area output console
    private void updateTextArea(final String text) {    
        SwingUtilities.invokeLater(new Runnable() {  
            public void run() {   
                testTextArea.append(text);      
            }    
        });  
    }  
    
    private void redirectSystemStreams() {    
        OutputStream out = new OutputStream() {      
            @Override      
            public void write(int b) throws IOException {        
                updateTextArea(String.valueOf((char) b));      
            }      
            @Override      
            public void write(byte[] b, int off, int len) throws IOException {
                updateTextArea(new String(b, off, len));      
            }      
            @Override      
            public void write(byte[] b) throws IOException {
                write(b, 0, b.length);      
            }    
        };    
        System.setOut(new PrintStream(out, true));    
        System.setErr(new PrintStream(out, true));
    }
 
}
